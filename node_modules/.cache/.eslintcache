[{"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\index.js":"1","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\App.js":"2","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Main.jsx":"3","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Card.jsx":"4","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Pokeinfo.jsx":"5"},{"size":213,"mtime":1695779262785,"results":"6","hashOfConfig":"7"},{"size":194,"mtime":1695779262735,"results":"8","hashOfConfig":"7"},{"size":3401,"mtime":1695781231996,"results":"9","hashOfConfig":"7"},{"size":1213,"mtime":1695779262751,"results":"10","hashOfConfig":"7"},{"size":1423,"mtime":1695782075426,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19q6z63",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\index.js",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\App.js",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Main.jsx",["28"],[],"import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport Pokeinfo from \"./Pokeinfo\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nconst Main = () => {\r\n  const [pokeData, setPokeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\");\r\n  /*Con este link traigo la información de los pokemons en lotes de a 20*/\r\n  const [nextUrl, setNextUrl] = useState();\r\n  const [prevUrl, setPrevUrl] = useState();\r\n  const [pokeDex, setPokeDex] = useState();\r\n\r\n  const pokeFun = async () => {\r\n    setLoading(true);\r\n    const res = await axios.get(url);\r\n    setNextUrl(res.data.next); //Asignamos la siguiente página de pokemons\r\n    setPrevUrl(res.data.previous); //Y se pone el link para ir a la página anterior\r\n    getPokemon(res.data.results); //Traemos los pokemons de a 20, si se hace f12 sse puede ver que hay 1126 resulatos\r\n    setLoading(false);\r\n  };\r\n  const getPokemon = async (res) => {\r\n    //En esta función obtenemos el URL de cada uno de los pokemon\r\n    //Y además creamos un objeto que contiene la información de cada pokemon\r\n    res.map(async (item) => {\r\n      const result = await axios.get(item.url);\r\n      setPokeData((state) => {\r\n        state = [...state, result.data];\r\n        state.sort((a, b) => (a.id > b.id ? 1 : -1)); //Con este metodo organizamos los id de los pokemons para que salgan en orden en la página\r\n        return state;\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    pokeFun();\r\n  }, [url]);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"left-content\">\r\n          <Card\r\n            pokemon={pokeData}\r\n            loading={loading}\r\n            infoPokemon={\r\n              (poke) => setPokeDex(poke)\r\n              /*Aqui pasamos la función info pokemon para que cuando demos click a un pokemon\r\n               aparezca su información a la izquierda, esto se completa en la clase Card.jsx*/\r\n            }\r\n          />\r\n          {/*En esta parte se actualiza el URL para que cada que se presione next or previous\r\n          la aplicación web haga render nuevamente. Además miramos si debe existir o no\r\n          un botón se anterior*/}\r\n          <div className=\"btn-group\">\r\n            {prevUrl && (\r\n              <button\r\n                onClick={() => {\r\n                  setPokeData([]);\r\n                  setUrl(prevUrl);\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n            )}\r\n            {/*Anteriormente se guardo la variable state se guardaban todos los pokemons,\r\n                   para que en la siguiente página no aparezcan del 1 al 40 por ejemplo, \r\n                   creamos en cada click un array vacio y así la siguiente página solo \r\n                   mostrara del 21 al 40, 41 a 60 etc, lo mismo sucede si vamosa la página anterior.*/}\r\n            {nextUrl && (\r\n              <button\r\n                onClick={() => {\r\n                  setPokeData([]);\r\n                  setUrl(nextUrl);\r\n                }}\r\n              >\r\n                Next\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"right-content\">\r\n          <Pokeinfo data={pokeDex} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Card.jsx",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Pokeinfo.jsx",[],[],{"ruleId":"29","severity":1,"message":"30","line":38,"column":6,"nodeType":"31","endLine":38,"endColumn":11,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokeFun'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [pokeFun, url]",{"range":"36","text":"37"},[1577,1582],"[pokeFun, url]"]