[{"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\index.js":"1","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\App.js":"2","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Main.jsx":"3","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Card.jsx":"4","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Pokeinfo.jsx":"5"},{"size":200,"mtime":1652240221000,"results":"6","hashOfConfig":"7"},{"size":182,"mtime":1652240221000,"results":"8","hashOfConfig":"7"},{"size":3312,"mtime":1677166554604,"results":"9","hashOfConfig":"7"},{"size":1176,"mtime":1677165573728,"results":"10","hashOfConfig":"7"},{"size":1310,"mtime":1677166006663,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19q6z63",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\index.js",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\App.js",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Main.jsx",["28"],[],"import React from \"react\";\nimport Card from \"./Card\";\nimport Pokeinfo from \"./Pokeinfo\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nconst Main = () => {\n  const [pokeData, setPokeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\");\n  /*Con este link traigo la información de los pokemons en lotes de a 20*/\n  const [nextUrl, setNextUrl] = useState();\n  const [prevUrl, setPrevUrl] = useState();\n  const [pokeDex, setPokeDex] = useState();\n\n  const pokeFun = async () => {\n    setLoading(true);\n    const res = await axios.get(url);\n    setNextUrl(res.data.next); //Asignamos la siguiente página de pokemons\n    setPrevUrl(res.data.previous); //Y se pone el link para ir a la página anterior\n    getPokemon(res.data.results); //Traemos los pokemons de a 20, si se hace f12 sse puede ver que hay 1126 resulatos\n    setLoading(false);\n  };\n  const getPokemon = async (res) => {\n    //En esta función obtenemos el URL de cada uno de los pokemon\n    //Y además creamos un objeto que contiene la información de cada pokemon\n    res.map(async (item) => {\n      const result = await axios.get(item.url);\n      setPokeData((state) => {\n        state = [...state, result.data];\n        state.sort((a, b) => (a.id > b.id ? 1 : -1)); //Con este metodo organizamos los id de los pokemons para que salgan en orden en la página\n        return state;\n      });\n    });\n  };\n  useEffect(() => {\n    pokeFun();\n  }, [url]);\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"left-content\">\n          <Card\n            pokemon={pokeData}\n            loading={loading}\n            infoPokemon={\n              (poke) => setPokeDex(poke)\n              /*Aqui pasamos la función info pokemon para que cuando demos click a un pokemon\n               aparezca su información a la izquierda, esto se completa en la clase Card.jsx*/\n            }\n          />\n          {/*En esta parte se actualiza el URL para que cada que se presione next or previous\n          la aplicación web haga render nuevamente. Además miramos si debe existir o no\n          un botón se anterior*/}\n          <div className=\"btn-group\">\n            {prevUrl && (\n              <button\n                onClick={() => {\n                  setPokeData([]);\n                  setUrl(prevUrl);\n                }}\n              >\n                Previous\n              </button>\n            )}\n            {/*Anteriormente se guardo la variable state se guardaban todos los pokemons,\n                   para que en la siguiente página no aparezcan del 1 al 40 por ejemplo, \n                   creamos en cada click un array vacio y así la siguiente página solo \n                   mostrara del 21 al 40, 41 a 60 etc, lo mismo sucede si vamosa la página anterior.*/}\n            {nextUrl && (\n              <button\n                onClick={() => {\n                  setPokeData([]);\n                  setUrl(nextUrl);\n                }}\n              >\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"right-content\">\n          <Pokeinfo data={pokeDex} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Main;\n","C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Card.jsx",[],[],"C:\\Users\\Administrador\\Documents\\GitHub\\Pokemon-Web\\src\\Components\\Pokeinfo.jsx",[],[],{"ruleId":"29","severity":1,"message":"30","line":38,"column":6,"nodeType":"31","endLine":38,"endColumn":11,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokeFun'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [pokeFun, url]",{"range":"36","text":"37"},[1540,1545],"[pokeFun, url]"]